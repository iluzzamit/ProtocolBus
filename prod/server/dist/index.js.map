{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,0CAAmC;AACnC,wDAAiD;AACjD,0DAAmD;AACnD,kDAAkD;AAClD,uDAA2D;AAC3D,wCAAqC;AACrC,6BAA6B;AAC7B,qCAA0C;AAC1C,mCAAsC;AACtC,6BAA8B;AAI9B,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,MAAM,IAAI,GAAG,IAAI,CAAC;AAElB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;IAC/D,OAAO,CAAC,IAAI,CAAC,kFAAkF,CAAC,CAAC;AACnG,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAEhB,MAAM,eAAe,GAAG,IAAI,yBAAe,EAAE,CAAA;AAC7C,MAAM,cAAc,GAAG,IAAI,wBAAc,EAAE,CAAC;AAC5C,MAAM,cAAc,GAAG,IAAI,4BAAc,EAAE,CAAC;AAC5C,MAAM,aAAa,GAAG,IAAI,qBAAY,EAAE,CAAC;AACzC,MAAM,YAAY,GAAG,IAAI,eAAM,EAAE,CAAC;AAElC,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;AAExG,kCAAmB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;AAEvE,MAAM,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,EAAC,MAAM,EAAE,GAAG,GAAE,EAAC,CAAC,CAAC;AAChE,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE;IAC7B,YAAY,CAAC,GAAG,CAAC,IAAI,SAAG,CAAC,YAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IAEhD,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;QAC/B,MAAM,IAAI,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,aAAa,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;QAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import * as express from \"express\";\r\nimport CANBus from \"./ctrl/CANBus\";\r\nimport CANBusDetector from \"./bl/CANBusDetector\";\r\nimport CANBusGenerator from \"./bl/CANBusGenerator\";\r\nimport { CANBusReporter } from \"./bl/CANReporter\";\r\nimport { initialCANBusRouter } from \"./route/CANBusRouter\";\r\nimport { Logger } from \"./bl/Logger\";\r\nimport * as cors from 'cors';\r\nimport { Events, Log } from \"./model/Log\";\r\nimport { EventEmitter } from \"events\";\r\nimport path = require(\"path\");\r\n\r\n/* tslint:disable */\r\n\r\nconst app = express();\r\nconst port = 8080;\r\n\r\nconst server = app.listen(port, () => {\r\n  console.info(`Server initialized and listening on port 8080.`);\r\n  console.info(`Please make sure you visit http://localhost:8080/ to watch the reporter results.`);\r\n});\r\n\r\napp.use(cors());\r\n\r\nconst canBusGenerator = new CANBusGenerator()\r\nconst canBusDetector = new CANBusDetector();\r\nconst canBusReporter = new CANBusReporter();\r\nconst canBusEmitter = new EventEmitter();\r\nconst canBusLogger = new Logger();\r\n\r\nconst canBus = new CANBus(canBusGenerator, canBusDetector, canBusReporter, canBusLogger, canBusEmitter);\r\n\r\ninitialCANBusRouter(app, canBus);\r\napp.use((express.static(path.join(__dirname, \"/../../client/build\"))));\r\n\r\nconst io = require('socket.io')(server, {cors: {origin: '*',}});\r\nio.on('connection', (socket) => {\r\n  canBusLogger.add(new Log(Events.userConnected));\r\n\r\n  canBusEmitter.on('message', () => {\r\n    const data = canBus.getReporterData();\r\n    socket.emit('message', data);\r\n  });\r\n\r\n  canBusEmitter.on('log', () => {\r\n    const logs = canBus.getLogs();\r\n    socket.emit('log', logs);\r\n  })\r\n});\r\n\r\n"]}