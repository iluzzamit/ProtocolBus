{"version":3,"file":"CANReporter.js","sourceRoot":"","sources":["../../src/bl/CANReporter.ts"],"names":[],"mappings":";;;AAEA,2CAA6C;AAO7C,MAAa,cAAc;IAA3B;QACI,SAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QAEjB,YAAO,GAAG,GAAG,EAAE;YACX,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAChG,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,iCAAK,KAAK,KAAE,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,kBAAU,CAAC,KAAK,CAAC,UAAU,CAAC,IAAE,CAAC,CAAC;YAEpI,OAAO,UAAU,CAAC;QACtB,CAAC,CAAA;QAED,YAAO,GAAG,CAAC,iBAAoC,EAAE,gBAAiC,EAAE,aAAa,EAAE,EAAE;YACjG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;gBAC5C,MAAM,UAAU,mCAAQ,iBAAiB,KAAE,gBAAgB,GAAE,CAAC;gBAC9D,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC;gBAEnD,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aAC7C;QACL,CAAC,CAAC;IACN,CAAC;CAAA;AAnBD,wCAmBC","sourcesContent":["import { HistoryCANMessage } from \"../model/HistoryCANMessage\";\r\nimport { DetectionResult } from \"../model/DetectionResult\";\r\nimport { canEncoder } from \"../common/utils\";\r\n\r\n/*\r\n    CANBusReporter has 2 methods,\r\n        getData let the user the last 100 CAN messages sorted by date (newest first)\r\n        addData to add new messages to the list\r\n*/\r\nexport class CANBusReporter {\r\n    data = new Map();\r\n\r\n    getData = () => {\r\n        const sortedData = Object.values(this.data).sort(({ timestamp: a }, { timestamp: b }) => b - a);\r\n        const slicedData = sortedData.slice(0,100);\r\n        const mappedData = slicedData.map(value => ({...value, timestamp: new Date(value.timestamp), frame: canEncoder(value.canMessage)}));\r\n\r\n        return mappedData;\r\n    }\r\n\r\n    addData = (historyCANMessage: HistoryCANMessage, detectionResults: DetectionResult, canBusEmitter) => {\r\n        if (!this.data.has(historyCANMessage.uniqueId)) {\r\n            const newMessage = { ...historyCANMessage, detectionResults };\r\n            this.data[historyCANMessage.uniqueId] = newMessage;\r\n\r\n            canBusEmitter.emit('message', newMessage);\r\n        }\r\n    };\r\n}"]}