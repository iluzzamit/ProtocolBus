{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/common/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { CANMessage } from \"../model/CANMessage\";\r\n\r\n/* tslint:disable */\r\n\r\nfunction dataDecoder (frame: string, length: number): any[] {\r\n    const indexes = [...Array(length).keys()];\r\n\r\n    return indexes.map((index: any) => {\r\n        const piece = frame.slice(index * 8, (index + 1) * 8)\r\n        return toBase(piece, 2, 16);\r\n    });\r\n}\r\n\r\nexport function canDecoder(frame: string): CANMessage {\r\n        const dataLength = parseInt(toBase(frame.slice(15, 19), 2, 10));\r\n        const dataPointer = dataLength * 8;\r\n        const canMessage: CANMessage = {\r\n            sof: frame.slice(0, 1),\r\n            identifier: `0x${toBase(frame.slice(1, 12), 2, 16)}`,\r\n            rtr: frame.slice(12, 13),\r\n            ide: frame.slice(13, 14),\r\n            r: frame.slice(14, 15),\r\n            dlc: dataLength,\r\n            dataField: dataDecoder(frame.slice(19, dataPointer + 19), dataLength),\r\n            checkSum: toBase(frame.slice(dataPointer + 19, dataPointer + 34), 2, 16),\r\n            del: frame.slice(dataPointer + 34, dataPointer + 35),\r\n            ack: {\r\n                ack: frame.slice(dataPointer + 35, dataPointer + 36),\r\n                del: frame.slice(dataPointer + 36, dataPointer + 37),\r\n            },\r\n            eof: toBase(frame.slice(dataPointer + 37, dataPointer + 44), 2, 16),\r\n        }\r\n\r\n        return canMessage;\r\n}\r\n\r\nexport function canEncoder(canMessage: CANMessage) {\r\n        let frame = '';\r\n        frame += toBase(canMessage.sof, 16, 2);\r\n        frame += paddingZeros(toBase(canMessage.identifier, 16, 2), 11);\r\n        frame += toBase(canMessage.rtr, 16, 2);\r\n        frame += toBase(canMessage.ide, 16, 2);\r\n        frame += toBase(canMessage.r, 16, 2);\r\n        frame += paddingZeros(toBase(`${canMessage.dlc}`, 16, 2), 4);\r\n\r\n        frame += canMessage.dataField.map(byte => {\r\n            const bits = paddingZeros(toBase(byte, 16, 2), 8);\r\n            return bits;\r\n        }).reduce((prev, curr) => prev += curr, '');\r\n\r\n        frame += paddingZeros(toBase(canMessage.checkSum, 16, 2), 15);\r\n        frame += toBase(canMessage.del, 16, 2);\r\n        frame += toBase(canMessage.ack['ack'], 16, 2);\r\n        frame += toBase(canMessage.ack['del'], 16, 2);\r\n        frame += paddingZeros(toBase(canMessage.eof, 16, 2), 7);\r\n\r\n        return frame;\r\n}\r\n\r\nexport function printFrame(frame: string): void {\r\n    const canMessage = canDecoder(frame);\r\n    console.info(`Frame SOF: ${canMessage.sof}`)\r\n    console.info(`Frame Identifier: ${canMessage.identifier}`)\r\n    console.info(`Frame RTR: ${canMessage.rtr}`)\r\n    console.info(`Frame IDE: ${canMessage.ide}`)\r\n    console.info(`Frame R: ${canMessage.r}`)\r\n    console.info(`Frame DLC (data length): ${canMessage.dlc}`)\r\n    console.info(`Frame Data-Field: ${canMessage.dataField}`)\r\n    console.info(`Frame CheckSum: ${canMessage.checkSum}`)\r\n    console.info(`Frame DEL: ${canMessage.del}`)\r\n    console.info(`Frame ACKField (ACK,DEL): ${canMessage.ack['ack']},${canMessage.ack['del']}`)\r\n    console.info(`Frame EOF: ${canMessage.eof}`)\r\n}\r\n\r\nexport const randomNumber = (max: number): number => Math.floor(Math.random() * max + 1);\r\n\r\nexport const toBase = (value: string, from: number, to: number): string =>\r\n    parseInt(value, from).toString(to).toUpperCase();\r\n\r\nexport const paddingZeros = (value: string, length: number): string => {\r\n    while (value.length < length) value = \"0\" + value;\r\n    return value;\r\n}\r\n\r\nexport const arrayToSet = (array: string[]) => {\r\n    const dataMap: Set<string> = new Set();\r\n    array.forEach(value => dataMap.add(value));\r\n    return dataMap;\r\n}"]}